/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

apply from: 'private.gradle'

ext {
	sourcePath = "site"
	sitePath = "site/_site"
	servePath = "site/_serve"

}

class Bundler extends Exec {
        void run(String... varArgs) {
                executable 'bundle'
                args = varArgs.toList()
        }

        void install() {
                run('install')
        }

        void update() {
                run('update')
        }

        void exec(String gem, String... varArgs) {
                def arguments = ["exec", gem]
                arguments += varArgs.toList()
                run(*arguments)
        }

}

class Jekyll extends Bundler {

	boolean drafts = false
	String source
	String destination

	void jekyll(String command, String... varArgs) {
		def arguments = [command]
		arguments += varArgs.toList()
		exec('jekyll', *arguments)
	}

	void serve() {
		def arguments = ['-s', 'site', '-d', destination]
		if (drafts == true) arguments.add('-D')
		jekyll('serve', *arguments)
	}

	void build() {
		def arguments = ['-s', 'site', '-I', '-d', destination]
		jekyll('build', *arguments)
	}
}

task bundleInstall(type: Bundler) {
        group 'Bundler'
        description 'Install gem dependencies'
        install()
}

task bundleUpdate(type: Bundler) {
        group 'Bundler'
        description 'Update gem dependencies'
        update()
}

task serve(type: Jekyll) {
	group 'Jekyll'
	description 'Serve the live site locally'
	source sourcePath
	destination servePath
	serve()
}

task serveDrafts(type: Jekyll) {
	group 'Jekyll'
	description 'Serve the site with drafts locally'
	drafts true
	source sourcePath
	destination servePath
	serve()
}

task build(type: Jekyll) {
	group 'Jekyll'
	description 'Build the site for publication'
	source sourcePath
	destination sitePath
	build()
}

// Publish needs work.
task publish() {
	group 'Publish'
	description 'Publish the site to the server'
	dependsOn build
	// commandLine 'scp', '-r', "$projectDir/$sitePath/*", serverHostingPath
	doLast {
		println "scp -r site/_site/* $serverHostingPath"
	}
}
